# Step
stages:
  - build
  - deploy

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_NAME: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_IMAGE_URI: registry.gitlab.com/sn-curtain/sn-curtain.com:latest

# Login Registry
before_script:
  - "docker login -u $GITLAB_USERNAME -p $GITLAB_TOKEN registry.gitlab.com"

# Build Staging
build-staging-image:
  stage: build
  image: docker:stable
  tags:
    - docker
    - deploy
  services:
    - docker:dind
  script:
    - docker build --pull --no-cache --build-arg OMISE_CLIENT=${OMISE_CLIENT_DEV} --build-arg BACKEND_URI=${BACKEND_URI_DEV} --build-arg BACKEND_IP=${BACKEND_IP_DEV} -t $DOCKER_IMAGE_NAME/staging -f .docker/stag.Dockerfile .
    - docker push $DOCKER_IMAGE_NAME/staging
  after_script:
    - docker rmi $(docker images -qa -f 'dangling=true')
  only:
    - staging

# Deploy Staging
deploy-staging:
  image: $DOCKER_IMAGE_NAME/staging:latest
  stage: deploy
  tags:
    - deploy
  before_script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - docker-compose version
  script:
    - docker-compose -f .cd/frontend.stag.yml pull
    - docker-compose -f .cd/frontend.stag.yml stop
    - docker-compose -f .cd/frontend.stag.yml rm --force
    - docker-compose -f .cd/frontend.stag.yml up -d
  after_script:
    - docker rmi $(docker images -qa -f 'dangling=true')
  environment:
    name: staging
    url: http://dev.sn-curtain.com
  only:
    - staging

# Build Production
build-production-image:
  stage: build
  image: docker:stable
  tags:
    - docker
    - deploy
  services:
    - docker:dind
  only:
    - master
  script:
    - docker build --pull --no-cache --build-arg OMISE_CLIENT=${OMISE_CLIENT_PROD} --build-arg BACKEND_URI=${BACKEND_URI_PROD} --build-arg BACKEND_IP=${BACKEND_IP_PROD} -t $DOCKER_IMAGE_NAME/production -f .docker/stag.Dockerfile .
    - docker push $DOCKER_IMAGE_NAME/production
  after_script:
    - docker rmi $(docker images -qa -f 'dangling=true')

# Deploy Production
deploy-production:
  image: $DOCKER_IMAGE_NAME/production:latest
  stage: deploy
  tags:
    - deploy
  before_script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - docker-compose version
  script:
    - docker-compose -f .cd/frontend.prod.yml pull
    - docker-compose -f .cd/frontend.prod.yml stop
    - docker-compose -f .cd/frontend.prod.yml rm --force
    - docker-compose -f .cd/frontend.prod.yml up -d
  after_script:
    - docker rmi $(docker images -qa -f 'dangling=true')
  environment:
    name: production
    url: http://sn-curtain.com
  only:
    - master
